name: Manual deployment
on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy'
        required: true
        type: string
        default: 'latest'
      environment:
        description: 'Environment to deploy'
        required: true
        type: string
        default: 'staging'

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  TF_VAR_IMAGE_TAG: ${{ github.event.inputs.image_tag }}
  
 
jobs:
  terraform-checks:
    name: Deployment pipeline for ${{ github.event.inputs.environment }} environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Deploying to hes-${{ github.event.inputs.environment }}
        shell: bash
        working-directory: Infra/IaaC/9_realms/hes/${{ github.event.inputs.environment }}
        run: |
          terraform init 
          terraform plan -no-color -input=false -lock=false -out .planfile
          terraform apply -auto-approve=true -lock-timeout=30s -input=false .planfile
        
      - name: Clean up after plan
        shell: bash
        run: rm -rf Infra/IaaC/9_realms/hes/${{ github.event.inputs.environment }}/.planfile
        


          