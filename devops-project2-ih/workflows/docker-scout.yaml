name: Docker Scout Job
on:
  schedule:
    - cron: "00 07 * * *"
  workflow_dispatch:

jobs:
  checkout:
    name: Checkout repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  docker:
    needs: [checkout]
    runs-on: ubuntu-latest
    name: Docker actions for ${{ matrix.spec.image_name }}
    strategy:
      matrix:
        spec:
          [
            {
              image_name: "heswebapp",
              dockerfile_path: "HES.UO.API/Dockerfile",
              context: ".",
            },
            {
              image_name: "hes-auditlog",
              dockerfile_path: "HES.AuditLogs.API/Dockerfile",
              context: ".",
            },
            {
              image_name: "hes-frontend",
              dockerfile_path: "HeadEnd.Ng/frontend.Dockerfile",
              context: "HeadEnd.Ng",
            },
            {
              image_name: "hes-dlms",
              dockerfile_path: "HES.DLMS.Hub/Dockerfile",
              context: ".",
            },
          ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine image tag
        id: tag
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # FIX ME, strip refs/tags/
            echo "tag_name=${{ github.ref }}" >> $GITHUB_OUTPUT
          else
            echo "tag_name=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Login to acr
        uses: docker/login-action@v3
        with:
          registry: hesbps.azurecr.io
          username: ${{ secrets.ACR_DOCKER_USER }}
          password: ${{ secrets.ACR_DOCKER_PAT }}

      - name: Build the container
        id: build
        env:
          TAG: ${{ steps.tag.outputs.tag_name }}
        run: |
          FULL_NAME="hesbps.azurecr.io/${{ matrix.spec.image_name }}:$TAG"
          echo "Building image $FULL_NAME"
          docker build -t $FULL_NAME ${{ matrix.spec.context }} -f ${{ matrix.spec.dockerfile_path }}
          echo "full_name=$FULL_NAME" >> $GITHUB_OUTPUT

      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          dockerhub-user: ${{ secrets.DOCKER_HUB_USER }}
          dockerhub-password: ${{ secrets.DOCKER_HUB_PAT }}
          registry-user: ${{ secrets.ACR_DOCKER_USER }}
          registry-password: ${{ secrets.ACR_DOCKER_PAT }}
          command: cves,recommendations
          image: ${{ steps.build.outputs.full_name }}
          only-severities: critical,high
          exit-code: true
          write-comment: false

  notifications:
    name: Send Failure Notification
    needs: [checkout, docker]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Google Chat on Failure
        run: |
          MESSAGE="Docker scout workflow *${{ github.workflow }}* for *${{ github.repository }}* failed with high or critical voulnerability."
          MESSAGE+=" Check the logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
                  "text": "'"${MESSAGE}"'"
                }'
